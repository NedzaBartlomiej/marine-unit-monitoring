version: '3.1'
services:
  redis:
    container_name: redis
    hostname: redis
    image: redis:latest
    ports:
      - "6479:6479"
    volumes:
      - cache-volume:/usr/cache
    networks:
      - marine-unit-monitoring-network
  mongodb1:
    container_name: mongodb1
    hostname: mongodb1
    image: mongo:latest
    command: [ "--replSet", "marine-unit-monitoring-db-rs", "--bind_ip_all", "--port", "27017" ]
    healthcheck:
      test: echo 'rs.status()'
    ports:
      - "27017:27017"
    volumes:
      - db-volume1:/usr/db
      - mongo-init:/usr/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - marine-unit-monitoring-network
  mongodb2:
    container_name: mongodb2
    hostname: mongodb2
    image: mongo:latest
    command: [ "--replSet", "marine-unit-monitoring-db-rs", "--bind_ip_all", "--port", "27018" ]
    healthcheck:
      test: echo 'rs.status()'
    ports:
      - "27018:27018"
    volumes:
      - db-volume2:/usr/db
      - mongo-init:/usr/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - marine-unit-monitoring-network
  mongodb3:
    container_name: mongodb3
    hostname: mongodb3
    image: mongo:latest
    command: [ "--replSet", "marine-unit-monitoring-db-rs", "--bind_ip_all", "--port", "27019" ]
    healthcheck:
      test: echo 'rs.status()'
    ports:
      - "27019:27019"
    volumes:
      - db-volume3:/usr/db
      - mongo-init:/usr/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - marine-unit-monitoring-network
  marine-unit-monitoring:
    container_name: marine-unit-monitoring
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - mongodb1
      - mongodb2
      - mongodb3
    networks:
      - marine-unit-monitoring-network
volumes:
  cache-volume:
  db-volume1:
  db-volume2:
  db-volume3:
  mongo-init:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker-entrypoint-initdb.d/
networks:
  marine-unit-monitoring-network:
